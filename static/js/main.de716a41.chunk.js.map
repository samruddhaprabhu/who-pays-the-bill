{"version":3,"sources":["context/index.js","components/stage_1.js","components/stage_2.js","App.js","index.js"],"names":["MyContext","React","createContext","MyProvider","state","stage","players","result","addPlayerHandler","name","setState","prevState","removePlayerHandler","idx","newArray","splice","nextHandler","length","console","log","toast","error","position","POSITION","TOP_LEFT","autoClose","setTimeout","generateLooser","Math","floor","random","resetGame","Provider","value","this","addPlayer","removePlayer","next","getNewLooser","props","children","Component","Stage1","textInput","useRef","context","useContext","useState","setError","validateInput","Form","onSubmit","e","preventDefault","current","className","Group","Control","type","placeholder","ref","Alert","variant","Button","map","item","onClick","Stage2","App","contextType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de716a41.chunk.js","sourcesContent":["import React,{ Component } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst MyContext = React.createContext();\r\n\r\nclass MyProvider extends Component {\r\n    state = {\r\n        stage:1,\r\n        players:[],\r\n        result:''\r\n    }\r\n\r\n    addPlayerHandler = (name) => {\r\n        this.setState((prevState)=>({\r\n            players:[\r\n                ...prevState.players,\r\n                name\r\n            ]\r\n        }))\r\n    }\r\n\r\n    removePlayerHandler = (idx) => {\r\n        let newArray = this.state.players;\r\n        newArray.splice(idx,1);\r\n        this.setState({players:newArray});\r\n    }\r\n\r\n    nextHandler = () => {\r\n        const { players } = this.state\r\n\r\n        if(players.length < 2){\r\n            console.log('error')\r\n            toast.error(\"You need more than one player\",{\r\n                position: toast.POSITION.TOP_LEFT,\r\n                autoClose: 2000\r\n            })\r\n        } else {\r\n           this.setState({\r\n               stage:2\r\n           },()=>{\r\n               setTimeout(()=>{\r\n                    this.generateLooser()\r\n               },2000)\r\n           })\r\n        }\r\n    }\r\n\r\n    generateLooser = () => {\r\n        const { players } = this.state;\r\n        this.setState({\r\n            result: players[Math.floor(Math.random() * players.length)]\r\n        })\r\n    }\r\n\r\n    resetGame = () => {\r\n        this.setState({\r\n            stage:1,\r\n            players:[],\r\n            result:''\r\n        })\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <MyContext.Provider value={{\r\n                    state: this.state,\r\n                    addPlayer: this.addPlayerHandler,\r\n                    removePlayer: this.removePlayerHandler,\r\n                    next: this.nextHandler,\r\n                    getNewLooser: this.generateLooser,\r\n                    resetGame: this.resetGame\r\n                }}>\r\n                    {this.props.children}\r\n                </MyContext.Provider>\r\n                <ToastContainer/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    MyContext,\r\n    MyProvider\r\n}","import React,{ useState, useContext, useRef } from 'react';\r\nimport { Button,Form, Alert } from 'react-bootstrap';\r\n\r\nimport { MyContext } from '../context';\r\n\r\nconst Stage1 = () =>  {\r\n  const textInput = useRef();\r\n  const context = useContext(MyContext);\r\n  const [error,setError ] = useState([false,''])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const value = textInput.current.value;\r\n    const validate = validateInput(value);\r\n\r\n    if(validate){\r\n      // form is valid...add player\r\n      setError([false,'']);\r\n      context.addPlayer(value)\r\n      textInput.current.value = ''\r\n    } \r\n  }\r\n\r\n  const validateInput = (value) => {\r\n    if(value === ''){\r\n      setError([true,'Sorry, you need to add something']);\r\n      return false;\r\n    }\r\n    if(value.length <= 2){\r\n      setError([true,'Sorry, you need 3 char at least']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  console.log(context)\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit}  className=\"mt-4\">\r\n        <Form.Group>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Add player name\"\r\n            name=\"player\"\r\n            ref={textInput}\r\n          />\r\n        </Form.Group>\r\n\r\n        { error[0] ?\r\n          <Alert variant=\"danger\">\r\n            {error[1]}\r\n          </Alert>\r\n        :null}\r\n\r\n        <Button className=\"miami\" variant=\"primary\" type=\"submit\">\r\n          Add player\r\n        </Button>\r\n        {\r\n         context.state.players && context.state.players.length > 0 ?\r\n          <>\r\n            <hr/>\r\n            <div>\r\n              <ul className=\"list-group\">\r\n                { context.state.players.map((item,idx)=>(\r\n                  <li key={idx} className=\"list-group-item d-flex justify-content-between align-items-center list-group-item-action\">\r\n                    {item}\r\n                    <span\r\n                      className=\"badge badge-danger\"\r\n                      onClick={()=> context.removePlayer(idx)}\r\n                    >x</span>\r\n                  </li>\r\n                ))\r\n                }\r\n              </ul>\r\n              <div\r\n                className=\"action_button\"\r\n                onClick={()=> context.next() }\r\n              >\r\n                NEXT\r\n              </div>\r\n            </div>\r\n          </>\r\n         :null\r\n        }\r\n      </Form>\r\n     \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Stage1;\r\n","import React,{ useContext } from 'react';\r\n\r\nimport { MyContext } from '../context';\r\n\r\nconst Stage2 = () =>  {\r\n  const context = useContext(MyContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"result_wrapper\">\r\n            <h3>The looser is:</h3>\r\n            <div>{context.state.result}</div>\r\n      </div>\r\n      <div\r\n        className=\"action_button\"\r\n        onClick={()=>context.resetGame()}\r\n      >\r\n        START OVER\r\n      </div>\r\n      <div\r\n        className=\"action_button btn_2\"\r\n        onClick={()=> context.getNewLooser()}\r\n      >\r\n        GET NEW LOOSER\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Stage2;\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css'\n\nimport { MyContext } from './context';\nimport Stage1 from './components/stage_1';\nimport Stage2 from './components/stage_2';\n\nclass App extends React.Component  {\n  static contextType = MyContext;\n\n  render(){\n    return (\n      <div className=\"wrapper\">\n       <div className=\"center-wrapper\">\n         <h1>Who pays the bill ?</h1>\n        { this.context.state.stage === 1 ?\n          <Stage1/>\n          :\n          <Stage2/>\n        }\n       </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { MyProvider } from './context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyProvider>\n      <App />\n    </MyProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}